// obch3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;


int main()
{
	double A[5][5] = { { 6.92, 1.28, 0.79, 1.15, -0.66 },{0.92, 3.5, 1.3, -1.62, 1.02}, 
	{1.15, -2.46, 6.1, 2.1, 1.483}, {1.33, 0.16, 2.1, 5.44, -18}, {1.14, -1.68, -1.217, 9, -3} };
	double B[5] = { 11.172, 0.115, 0.009, 9.349, 9.249 };
	double A2[5][5] = { { 6.92, 1.28, 0.79, 1.15, -0.66 },{0.92, 3.5, 1.3, -1.62, 1.02},
	{1.15, -2.46, 6.1, 2.1, 1.483}, {1.33, 0.16, 2.1, 5.44, -18}, {1.14, -1.68, -1.217, 9, -3} };
	double B2[5] = { 11.172, 0.115, 0.009, 9.349, 9.249 };
	double main = -1;
	int n = 5;
	double mai[5];
	int f = 0;
	int qi[5] = { 0,0,0,0,0 }; int pi[5] = { -1,-1,-1,-1,-1 };
	int qi2[5] = { 0,0,0,0,0 }; int pi2[5] = { -1,-1,-1,-1,-1 };
	for (int k = 0; k < 4; k++)
	{
		main = 0;
		cout <<k<< " A =" << endl;
		for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				cout << A[i][j] << " ";
			}
			cout << endl;
		}
		cout << "B =" << endl;
		for (int i = 0; i < n; i++)
		{
			cout << B[i] << endl;
		}
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				f = 0;
				for (int l = 0; l<=k; l++)
				{
					if ((i == pi2[l])||(j == qi2[l]))
						f = 1;
				}
				if (f == 0)
				{
					if (abs(main) < abs(A[i][j]))
					{
						main = A[i][j];
						pi[k] = i;
						qi[k] = j;
					}
				}
			}
		}
		pi2[k] = pi[k];
		qi2[k] = qi[k];
		for (int i = 0; i < 5; i++)
		{
			mai[i] = A[i][qi[k]] / main;
		}
		cout << "main = " << main << endl;
		for (int i = 0; i < n; i++)
		{
			if ((i != pi[0])&& (i != pi[1])&& (i != pi[2])&& (i != pi[3])&& (i != pi[4])) 
			{
				for (int j = 0; j < n; j++)
				{
					A[i][j] = A[i][j] - mai[i]* A[pi[k]][j];

				}
				B[i] = B[i] - mai[i] * B[pi[k]];
			}
		}
		for (int i = 0; i < n; i++)
		{
			if((i != pi[0]) && (i != pi[1]) && (i != pi[2]) && (i != pi[3]) && (i != pi[4]))
				A[i][qi[k]] = 0;
		}
	}
	double M[5][6];
	for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				M[i][j] = A[i][j];
			}
		}

	for (int i = 0; i < 6; i++)
	{
		M[i][5] = B[i];
	}
	cout  << "MT =" << endl;
	for (int i = 0; i < 5; i++)
	{
		for (int j = 0; j < 6; j++)
		{
			cout << M[i][j] << " ";
		}
		cout << endl;
	}
	double x[5];
	x[0] = M[0][5] / M[0][0];
	M[1][5] = M[1][5] - (M[1][0] / M[0][0]) * M[0][5];
	x[1] = M[1][5] / M[1][1];
	M[2][5] = M[2][5] - (M[2][0] / M[0][0]) * M[0][5] - (M[2][1] / M[1][1]) * M[1][5];
	x[2] = M[2][5] / M[2][2];
	M[4][5] = M[4][5] - (M[4][0] / M[0][0]) * M[0][5] - (M[4][1] / M[1][1]) * M[1][5] - (M[4][2] / M[2][2]) * M[2][5];
	x[3] = M[4][5] / M[4][3];
	M[3][5] = M[3][5] - (M[3][0] / M[0][0]) * M[0][5] - (M[3][1] / M[1][1]) * M[1][5] - (M[3][2] / M[2][2]) * M[2][5] - (M[3][3] / M[4][3])*M[4][5];
	x[4] = M[3][5] / M[3][4];
	cout << "X =" << endl;
	for (int i = 0; i < 5; i++)
	{
		cout << x[i] << endl;
	}
	for (int j = 0; j < 5; j++)
	{
		for (int i = 0; i < 5; i++)
			B2[j] = B2[j] - A2[j][i] * x[i];
	}
	cout << "soprazh =" << endl;
	for (int j = 0; j < 5; j++)
	{
		cout << B2[j] << endl;
	}
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
